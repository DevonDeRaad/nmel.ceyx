---
title: "tree"
format:
  html:
    code-fold: show
    code-tools: true
toc: true
toc-title: Document Contents
number-sections: true
embed-resources: true
---

### Use your filtered vcf file to generate a phylip with sequence data for all filtered loci (including invariant sites), for only the samples that passed all filtering protocols
```{r}
library(vcfR)
#read in vcf with filtered, unlinked loci that we want to use for gene tree estimation
vcfR<-read.vcfR("~/Desktop/nmel.ceyx.rad/filtered.unlinked.snps.vcf.gz")
#check out the metadata
head(vcfR@fix)
#we want to isolate the third column, which contains the name of each locus
head(vcfR@fix[,3])
#get a list of just locus names to use as whitelist for stacks
whitelist<-sub(":.*", "", vcfR@fix[,3])
#make sure each locus is unique
length(unique(whitelist)) == length(whitelist)
#make sure the locus names look right
length(whitelist)
whitelist[1:5]

#write out whitelist for stacks
#write.table(whitelist, file = "~/Desktop/nmel.ceyx.rad/2580.whitelist.txt", quote = F, row.names = F, col.names = F)

#generate popmap including only the samples in this filtered vcf file, assigning each sample to a unique pop so that we keep all tips distinct
#but phylip format limits names to 10 characters or less! So don't forget to make population names less than 10 characters
#here I use this code to do that:
colnames(vcfR@gt)[-1]
gsub(".*_","",colnames(vcfR@gt)[-1])

#make popmap
df<-data.frame(ind=colnames(vcfR@gt)[-1],pop=gsub(".*_","",colnames(vcfR@gt)[-1]))

#write out popmap for stacks
#write.table(df, file = "~/Desktop/nmel.ceyx.rad/iqtree.popmap.txt", quote = F, row.names = F, col.names = F, sep = "\t")
```

#### copy both of those files you just wrote to you local disk into your project directory on the cluster

### use this bash code to generate the input phylip file you need to use for treebuilding, determine the optimal model of sequence evolution and generate a concatenated maximum likelihood tree for your dataset using the optimized model and calculating bootstrap support for internal branches
```{bash, eval=FALSE}
#!/bin/sh
#
#SBATCH --job-name=iqtree               # Job Name
#SBATCH --nodes=1             # 40 nodes
#SBATCH --ntasks-per-node=15               # 40 CPU allocation per Task
#SBATCH --partition=sixhour         # Name of the Slurm partition used
#SBATCH --chdir=/home/d669d153/work/nmel.ceyx/iqtree  # Set working d$
#SBATCH --mem-per-cpu=2gb            # memory requested
#SBATCH --time=360

#run this bash code in a terminal window in the directory where you want the output to be, specifying the path to where you ran your optimized Stacks iteration to the -P flag
#(whitelist includes the loci you want to keep and popmap includes the samples you want to keep based on filtering)
#--phylip-var-all flag indicates to output the phylip including invariant sites (best for phylogenetic reconstruction)
/home/d669d153/work/stacks-2.41/populations -P /home/d669d153/work/nmel.ceyx/fastq -O . -M iqtree.popmap.txt --whitelist 2580.whitelist.txt --phylip-var-all

#annoyingly, Stacks adds a line at the end of the file that says something like '# Stacks v2.41;  Phylip interleaved; December 02, 2022'
#this is not standard for a phylip file, and will cause an error if you try to use this file to build a tree. Luckily, you can use the following sed one-liner below to easily remove this trailing line and write the cleaned output to a new file
sed '/^#/ d' populations.all.phylip > pops.phy

#-s specifies the input sequence data
#-m MFP specifies to perform model testing and use the best model of sequence evolution
#-bb specifies performing 1000 ultrafast bootstraps to assess support
#-nt AUTO allows the program to use the optimal number of threads (15 specified here)
/home/d669d153/work/iqtree-2.2.0-Linux/bin/iqtree2 -s pops.phy -m MFP -bb 1000 -nt AUTO
```

#### this should only take a couple of hours to finish

### visualize your tree using the figtree GUI
```{r}
#start by copying in the entire directory where you ran iqtree to your local machine, e.g.,
#scp -r d669d153@hpc.crc.ku.edu:/home/d669d153/work/nmel.ceyx/iqtree /Users/devonderaad/Desktop/nmel.ceyx.rad/
#open the tree in figtree
#rooted tree looks like this:
knitr::include_graphics("/Users/devonderaad/Desktop/iqtree.png")
```
